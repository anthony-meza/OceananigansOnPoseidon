Starting CUDA test!
  Activating new project at `~/OceananigansOnPoseidon`
   Resolving package versions...
   Installed GPUArraysCore â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.6
   Installed LLVMLoopInfo â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
   Installed SentinelArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.5
   Installed CUDA_Driver_jll â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.1+1
   Installed ColorTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.11.5
   Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.0.4
   Installed GPUCompiler â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.26.7
   Installed PrettyTables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.3.2
   Installed FixedPointNumbers â”€â”€â”€â”€â”€â”€ v0.8.5
   Installed LLVMExtra_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.30+0
   Installed NVTX_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.1.0+2
   Installed NVTX â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.4
   Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.3
   Installed InlineStrings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.1
   Installed CUDA_Runtime_Discovery â”€ v0.3.4
   Installed InvertedIndices â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
   Installed LaTeXStrings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.1
   Installed JuliaNVTXCallbacks_jll â”€ v0.2.1+0
   Installed BFloat16s â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed CEnum â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
   Installed Random123 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.7.0
   Installed GPUArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v10.2.3
   Installed CUDA_Runtime_jll â”€â”€â”€â”€â”€â”€â”€ v0.14.1+0
   Installed DataFrames â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.6.1
   Installed Colors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.11
   Installed StringManipulation â”€â”€â”€â”€â”€ v0.3.4
   Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€ v1.2.1
   Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.0
   Installed LLVM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v8.0.0
   Installed CUDA â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.4.3
    Updating `~/OceananigansOnPoseidon/Project.toml`
  [052768ef] + CUDA v5.4.3
    Updating `~/OceananigansOnPoseidon/Manifest.toml`
  [621f4979] + AbstractFFTs v1.5.0
  [79e6a3ab] + Adapt v4.0.4
  [a9b6321e] + Atomix v0.1.0
  [ab4f0b2a] + BFloat16s v0.5.0
  [fa961155] + CEnum v0.5.0
  [052768ef] + CUDA v5.4.3
  [1af6417a] + CUDA_Runtime_Discovery v0.3.4
  [3da002f7] + ColorTypes v0.11.5
  [5ae59095] + Colors v0.12.11
  [34da2185] + Compat v4.15.0
  [a8cc5b0e] + Crayons v4.1.1
  [9a962f9c] + DataAPI v1.16.0
  [a93c6f00] + DataFrames v1.6.1
  [864edb3b] + DataStructures v0.18.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [e2ba6199] + ExprTools v0.1.10
  [53c48c17] + FixedPointNumbers v0.8.5
  [0c68f7d7] + GPUArrays v10.2.3
  [46192b85] + GPUArraysCore v0.1.6
  [61eb1bfa] + GPUCompiler v0.26.7
  [842dd82b] + InlineStrings v1.4.1
  [41ab1584] + InvertedIndices v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.5.0
  [63c18a36] + KernelAbstractions v0.9.22
  [929cbde3] + LLVM v8.0.0
  [8b046642] + LLVMLoopInfo v1.0.0
  [b964fa9f] + LaTeXStrings v1.3.1
  [1914dd2f] + MacroTools v0.5.13
  [e1d29d7a] + Missings v1.2.0
  [5da4648a] + NVTX v0.3.4
  [bac558e1] + OrderedCollections v1.6.3
  [69de0a69] + Parsers v2.8.1
  [2dfb63ee] + PooledArrays v1.4.3
  [aea7be01] + PrecompileTools v1.2.1
  [21216c6a] + Preferences v1.4.3
  [08abe8d2] + PrettyTables v2.3.2
  [74087812] + Random123 v1.7.0
  [e6cf234a] + RandomNumbers v1.5.3
  [189a3867] + Reexport v1.2.2
  [ae029012] + Requires v1.3.0
  [6c6a2e73] + Scratch v1.2.1
  [91c51154] + SentinelArrays v1.4.5
  [a2af1166] + SortingAlgorithms v1.2.1
  [90137ffa] + StaticArrays v1.9.7
  [1e83bf80] + StaticArraysCore v1.4.3
  [892a3eda] + StringManipulation v0.3.4
  [3783bdb8] + TableTraits v1.0.1
  [bd369af6] + Tables v1.11.1
  [a759f4b9] + TimerOutputs v0.5.24
  [013be700] + UnsafeAtomics v0.2.1
  [d80eeb9a] + UnsafeAtomicsLLVM v0.1.5
  [4ee394cb] + CUDA_Driver_jll v0.9.1+1
â†’ [76a88914] + CUDA_Runtime_jll v0.14.1+0
  [9c1d0b0a] + JuliaNVTXCallbacks_jll v0.2.1+0
  [dad2f222] + LLVMExtra_jll v0.0.30+0
  [e98f9f5b] + NVTX_jll v3.1.0+2
  [0dad84c5] + ArgTools v1.1.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads v1.6.0
  [7b1f6079] + FileWatching
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [4af54fe1] + LazyArtifacts
  [b27032c2] + LibCURL v0.6.4
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [ca575930] + NetworkOptions v1.2.0
  [44cfe95a] + Pkg v1.9.2
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA v0.7.0
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics v1.9.0
  [fa267f1f] + TOML v1.0.3
  [a4e569a6] + Tar v1.10.0
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [e66e0078] + CompilerSupportLibraries_jll v1.0.5+0
  [deac9b47] + LibCURL_jll v8.4.0+0
  [29816b5a] + LibSSH2_jll v1.11.0+1
  [c8ffd9c3] + MbedTLS_jll v2.28.2+0
  [14a3606d] + MozillaCACerts_jll v2022.10.11
  [4536629a] + OpenBLAS_jll v0.3.21+4
  [bea87d4a] + SuiteSparse_jll v5.10.1+6
  [83775a58] + Zlib_jll v1.2.13+0
  [8e850b90] + libblastrampoline_jll v5.8.0+0
  [8e850ede] + nghttp2_jll v1.52.0+1
  [3f19e933] + p7zip_jll v17.4.0+0
        Info Packages marked with â†’ are not downloaded, use `instantiate` to download
Precompiling project...
[32m  âœ“ [39m[90mLLVMLoopInfo[39m
[32m  âœ“ [39m[90mLaTeXStrings[39m
[32m  âœ“ [39m[90mInvertedIndices[39m
[32m  âœ“ [39m[90mAdapt[39m
[32m  âœ“ [39m[90mCEnum[39m
[32m  âœ“ [39m[90mMissings[39m
[32m  âœ“ [39m[90mBFloat16s[39m
[32m  âœ“ [39m[90mPooledArrays[39m
[32m  âœ“ [39m[90mSortingAlgorithms[39m
[32m  âœ“ [39m[90mNVTX_jll[39m
[32m  âœ“ [39m[90mJuliaNVTXCallbacks_jll[39m
[32m  âœ“ [39m[90mRandom123[39m
[32m  âœ“ [39m[90mCUDA_Driver_jll[39m
[32m  âœ“ [39m[90mLLVMExtra_jll[39m
[32m  âœ“ [39m[90mAdapt â†’ AdaptStaticArraysExt[39m
[32m  âœ“ [39m[90mCUDA_Runtime_Discovery[39m
[32m  âœ“ [39m[90mSentinelArrays[39m
[32m  âœ“ [39m[90mGPUArraysCore[39m
[32m  âœ“ [39m[90mStringManipulation[39m
[32m  âœ“ [39m[90mCUDA_Runtime_jll[39m
[32m  âœ“ [39m[90mFixedPointNumbers[39m
[32m  âœ“ [39m[90mColorTypes[39m
[32m  âœ“ [39m[90mLLVM[39m
[32m  âœ“ [39m[90mLLVM â†’ BFloat16sExt[39m
[32m  âœ“ [39m[90mUnsafeAtomicsLLVM[39m
[32m  âœ“ [39m[90mGPUArrays[39m
[32m  âœ“ [39m[90mColors[39m
[32m  âœ“ [39m[90mNVTX[39m
[32m  âœ“ [39m[90mKernelAbstractions[39m
[32m  âœ“ [39m[90mParsers[39m
[32m  âœ“ [39m[90mInlineStrings[39m
[32m  âœ“ [39m[90mPrettyTables[39m
[32m  âœ“ [39m[90mGPUCompiler[39m
[32m  âœ“ [39m[90mDataFrames[39m
[32m  âœ“ [39mCUDA
  35 dependencies successfully precompiled in 140 seconds. 33 already precompiled.
â”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.
â”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.
â”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76
â”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.
â”‚ 
â”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH
â”‚ environment variable, or that it does not contain paths to CUDA libraries.
â”‚ 
â”‚ In any other case, please file an issue.
â”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219
â”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.
â”‚ 
â”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH
â”‚ environment variable, or that it does not contain paths to CUDA libraries.
â”‚ 
â”‚ In any other case, please file an issue.
â”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219
CUDA runtime 11.8, artifact installation
CUDA driver 11.2
NVIDIA driver 460.32.3

CUDA libraries: 
- CUBLAS: 11.4.1
- CURAND: 10.3.0
- CUFFT: 10.9.0
- CUSOLVER: 11.4.1
- CUSPARSE: 11.7.5
- CUPTI: 2022.3.0 (API 18.0.0)
- NVML: 11.0.0+460.32.3

Julia packages: 
- CUDA: 5.4.3
- CUDA_Driver_jll: 0.9.1+1
- CUDA_Runtime_jll: 0.14.1+0

Toolchain:
- Julia: 1.9.4
- LLVM: 14.0.6

1 device:
  0: Tesla V100-SXM2-16GB (sm_70, 12.702 GiB / 15.782 GiB available)
Successful CUDA Test
Starting Oceananigans test!
  Activating project at `~/OceananigansOnPoseidon`
   Resolving package versions...
   Installed XZ_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v5.4.6+0
   Installed StatsAPI â”€â”€â”€â”€â”€â”€â”€â”€ v1.7.0
   Installed P11Kit_jll â”€â”€â”€â”€â”€â”€ v0.24.1+0
   Installed Lz4_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.9.4+0
   Installed GnuTLS_jll â”€â”€â”€â”€â”€â”€ v3.8.4+0
   Installed LRUCache â”€â”€â”€â”€â”€â”€â”€â”€ v1.6.1
   Installed Distances â”€â”€â”€â”€â”€â”€â”€ v0.10.11
   Installed NetCDF_jll â”€â”€â”€â”€â”€â”€ v400.902.209+0
   Installed libzip_jll â”€â”€â”€â”€â”€â”€ v1.10.1+0
   Installed Blosc_jll â”€â”€â”€â”€â”€â”€â”€ v1.21.5+0
   Installed PencilFFTs â”€â”€â”€â”€â”€â”€ v0.15.1
   Installed CommonDataModel â”€ v0.3.6
   Installed NCDatasets â”€â”€â”€â”€â”€â”€ v0.14.4
   Installed ArrayInterface â”€â”€ v7.7.1
   Installed Nettle_jll â”€â”€â”€â”€â”€â”€ v3.7.2+0
   Installed DiskArrays â”€â”€â”€â”€â”€â”€ v0.3.23
   Installed PencilArrays â”€â”€â”€â”€ v0.19.5
   Installed Oceananigans â”€â”€â”€â”€ v0.91.4
    Updating `~/OceananigansOnPoseidon/Project.toml`
  [9e8cae18] + Oceananigans v0.91.4
    Updating `~/OceananigansOnPoseidon/Manifest.toml`
âŒ… [4fba245c] + ArrayInterface v7.7.1
  [179af706] + CFTime v0.1.3
  [1fbeeb36] + CommonDataModel v0.3.6
  [187b0558] + ConstructionBase v1.5.5
  [7445602f] + CubedSphere v0.2.5
âŒ… [3c3547ce] + DiskArrays v0.3.23
  [b4f34e82] + Distances v0.10.11
  [ffbed154] + DocStringExtensions v0.9.3
  [b305315f] + Elliptic v1.0.1
  [7a1cc6ca] + FFTW v1.8.0
  [5789e2e9] + FileIO v1.16.3
  [c27321d9] + Glob v1.3.1
  [615f187c] + IfElse v0.1.1
  [40713840] + IncompleteLU v0.2.1
  [92d709cd] + IrrationalConstants v0.2.2
  [42fd0dbc] + IterativeSolvers v0.9.4
  [033835bb] + JLD2 v0.4.49
  [0f8b85d8] + JSON3 v1.14.0
  [8ac3fa9e] + LRUCache v1.6.1
  [2ab3a3ac] + LogExpFunctions v0.3.28
âŒƒ [da04e1cc] + MPI v0.20.16
  [3da0fdf6] + MPIPreferences v0.1.11
  [85f8d34a] + NCDatasets v0.14.4
  [9e8cae18] + Oceananigans v0.91.4
  [6fe1bfb0] + OffsetArrays v1.14.1
  [65ce6f38] + PackageExtensionCompat v1.0.2
  [0e08944d] + PencilArrays v0.19.5
  [4a48f351] + PencilFFTs v0.15.1
  [eebad327] + PkgVersion v0.3.3
  [49802e3a] + ProgressBars v1.5.1
  [94ee1d12] + Quaternions v0.7.6
  [c1ae055f] + RealDot v0.1.0
  [3cdcf5f2] + RecipesBase v1.3.4
  [6038ab10] + Rotations v1.7.1
  [d496a93d] + SeawaterPolynomials v0.3.4
  [276daf66] + SpecialFunctions v2.4.0
âŒ… [aedffcd0] + Static v0.8.9
  [0d7ed370] + StaticArrayInterface v1.5.1
  [15972242] + StaticPermutations v0.3.0
  [82ae8749] + StatsAPI v1.7.0
  [5e0ebb24] + Strided v2.1.0
  [4db3bf67] + StridedViews v0.3.1
  [09ab397b] + StructArrays v0.6.18
  [856f2bd8] + StructTypes v1.10.0
âŒ… [6aa5eb33] + TaylorSeries v0.16.0
  [3bb67fe8] + TranscodingStreams v0.11.0
  [9d95972d] + TupleTools v1.5.0
  [81def892] + VersionParsing v1.3.0
  [0b7ba130] + Blosc_jll v1.21.5+0
  [6e34b625] + Bzip2_jll v1.0.8+1
  [f5851436] + FFTW_jll v3.3.10+0
  [0951126a] + GnuTLS_jll v3.8.4+0
âŒƒ [0234f1f7] + HDF5_jll v1.14.2+1
  [e33a78d0] + Hwloc_jll v2.11.0+0
  [1d5cc7b8] + IntelOpenMP_jll v2024.2.0+0
  [1d63c593] + LLVMOpenMP_jll v15.0.7+0
  [94ce4f54] + Libiconv_jll v1.17.0+0
  [5ced341a] + Lz4_jll v1.9.4+0
  [856f044c] + MKL_jll v2024.2.0+0
  [7cb0a576] + MPICH_jll v4.2.1+1
  [f1f71cc9] + MPItrampoline_jll v5.4.0+0
  [9237b28f] + MicrosoftMPI_jll v10.1.4+2
âŒƒ [7243133f] + NetCDF_jll v400.902.209+0
âŒ… [4c82536e] + Nettle_jll v3.7.2+0
  [fe0851c0] + OpenMPI_jll v5.0.3+0
  [458c3c95] + OpenSSL_jll v3.0.14+0
  [efe28fd5] + OpenSpecFun_jll v0.5.5+0
  [c2071276] + P11Kit_jll v0.24.1+0
  [02c8fc9c] + XML2_jll v2.13.1+0
  [ffd25f8a] + XZ_jll v5.4.6+0
  [3161d3a3] + Zstd_jll v1.5.6+0
  [477f73a3] + libaec_jll v1.1.2+0
  [337d8026] + libzip_jll v1.10.1+0
  [1317d2d5] + oneTBB_jll v2021.12.0+0
  [8ba89e20] + Distributed
  [a63ad114] + Mmap
  [4607b0f0] + SuiteSparse
  [781609d7] + GMP_jll v6.2.1+2
  [05823500] + OpenLibm_jll v0.8.1+0
        Info Packages marked with âŒƒ and âŒ… have new versions available. Those with âŒƒ may be upgradable, but those with âŒ… are restricted by compatibility constraints from upgrading. To see why use `status --outdated -m`
Precompiling project...
[32m  âœ“ [39m[90mLRUCache[39m
[32m  âœ“ [39m[90mStatsAPI[39m
[32m  âœ“ [39m[90mOffsetArrays â†’ OffsetArraysAdaptExt[39m
[32m  âœ“ [39m[90mNettle_jll[39m
[32m  âœ“ [39m[90mXZ_jll[39m
[32m  âœ“ [39m[90mP11Kit_jll[39m
[32m  âœ“ [39m[90mLz4_jll[39m
[32m  âœ“ [39m[90mLRUCache â†’ SerializationExt[39m
[32m  âœ“ [39m[90mArrayInterface[39m
[32m  âœ“ [39m[90mCommonDataModel[39m
[32m  âœ“ [39m[90mDistances[39m
[32m  âœ“ [39m[90mBlosc_jll[39m
[32m  âœ“ [39m[90mGnuTLS_jll[39m
[32m  âœ“ [39m[90mArrayInterface â†’ ArrayInterfaceGPUArraysCoreExt[39m
[32m  âœ“ [39m[90mDistances â†’ DistancesSparseArraysExt[39m
[32m  âœ“ [39m[90mDiskArrays[39m
[32m  âœ“ [39m[90mArrayInterface â†’ ArrayInterfaceStaticArraysCoreExt[39m
[32m  âœ“ [39m[90mStructArrays â†’ StructArraysGPUArraysCoreExt[39m
[32m  âœ“ [39m[90mlibzip_jll[39m
[32m  âœ“ [39m[90mRotations[39m
[32m  âœ“ [39m[90mNetCDF_jll[39m
[32m  âœ“ [39m[90mStructArrays â†’ StructArraysStaticArraysExt[39m
[32m  âœ“ [39m[90mStructArrays â†’ StructArraysSparseArraysExt[39m
[32m  âœ“ [39m[90mRotations â†’ RotationsRecipesBaseExt[39m
[32m  âœ“ [39m[90mStructArrays â†’ StructArraysAdaptExt[39m
[32m  âœ“ [39m[90mNCDatasets[39m
[32m  âœ“ [39m[90mStridedViews â†’ StridedViewsCUDAExt[39m
[32m  âœ“ [39m[90mCUDA â†’ SpecialFunctionsExt[39m
[32m  âœ“ [39m[90mMPI â†’ CUDAExt[39m
[32m  âœ“ [39m[90mStrided[39m
[32m  âœ“ [39m[90mJSON3[39m
[32m  âœ“ [39m[90mArrayInterface â†’ ArrayInterfaceCUDAExt[39m
[32m  âœ“ [39m[90mFFTW[39m
[32m  âœ“ [39m[90mStaticArrayInterface[39m
[32m  âœ“ [39m[90mCubedSphere[39m
[32m  âœ“ [39m[90mStaticArrayInterface â†’ StaticArrayInterfaceStaticArraysExt[39m
[32m  âœ“ [39m[90mStaticArrayInterface â†’ StaticArrayInterfaceOffsetArraysExt[39m
[32m  âœ“ [39m[90mPencilArrays[39m
[32m  âœ“ [39m[90mPencilFFTs[39m
[32m  âœ“ [39m[90mJLD2[39m
[32m  âœ“ [39mOceananigans
  41 dependencies successfully precompiled in 52 seconds. 122 already precompiled.
  [33m5[39m dependencies had output during precompilation:[33m
â”Œ [39mSpecialFunctionsExt [1285c0f1-ff9f-5867-b66e-0f359bcf09ba][33m
â”‚  [39mâ”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.[33m
â”‚  [39mâ”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â””  [39m[33m
â”Œ [39mStridedViewsCUDAExt [6eaa3634-1823-5a95-8160-0f368f727af8][33m
â”‚  [39mâ”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.[33m
â”‚  [39mâ”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â””  [39m[33m
â”Œ [39mCUDAExt [11b7e2e0-d079-575b-885e-0ab22ef3252c][33m
â”‚  [39mâ”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.[33m
â”‚  [39mâ”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â””  [39m[33m
â”Œ [39mArrayInterfaceCUDAExt [f78586ac-ba87-5ec7-b3a5-84bc1b258ee3][33m
â”‚  [39mâ”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.[33m
â”‚  [39mâ”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â””  [39m[33m
â”Œ [39mOceananigans [9e8cae18-63c1-5223-a75c-80ca9d6e9a09][33m
â”‚  [39mâ”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.[33m
â”‚  [39mâ”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â”‚  [39mâ”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH[33m
â”‚  [39mâ”‚ environment variable, or that it does not contain paths to CUDA libraries.[33m
â”‚  [39mâ”‚ [33m
â”‚  [39mâ”‚ In any other case, please file an issue.[33m
â”‚  [39mâ”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219[33m
â””  [39m
â”Œ Warning: The NVIDIA driver on this system only supports up to CUDA 11.2.0.
â”‚ For performance reasons, it is recommended to upgrade to a driver that supports CUDA 11.3 or higher.
â”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:76
â”Œ Warning: CUDA runtime library `libcublasLt.so.11` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libcublasLt.so.11`.
â”‚ 
â”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH
â”‚ environment variable, or that it does not contain paths to CUDA libraries.
â”‚ 
â”‚ In any other case, please file an issue.
â”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219
â”Œ Warning: CUDA runtime library `libnvrtc.so` was loaded from a system path, `/cm/shared/apps/cuda11.2/toolkit/11.2.2/targets/x86_64-linux/lib/libnvrtc.so`.
â”‚ 
â”‚ This may cause errors. Ensure that you have not set the LD_LIBRARY_PATH
â”‚ environment variable, or that it does not contain paths to CUDA libraries.
â”‚ 
â”‚ In any other case, please file an issue.
â”” @ CUDA ~/.julia/packages/CUDA/Tl08O/src/initialization.jl:219
â”Œ Warning: An error was encountered within set! while setting the field
â”‚ 
â”‚     128Ã—128Ã—1 Field{Face, Center, Center} on RectilinearGrid on GPU
â”‚ 
â”‚ Note that to use set!(field, func::Function) on a field at location (Face, Center, Center)
â”‚ and on a grid with topology (Periodic, Periodic, Flat), func must be callable via
â”‚ 
â”‚      func(x, y)
â”” @ Oceananigans.Fields ~/.julia/packages/Oceananigans/thcPW/src/Fields/set!.jl:60
ERROR: LoadError: MethodError: no method matching Ïµ(::Float64, ::Float64)

Closest candidates are:
  Ïµ(::Any, ::Any, !Matched::Any)
   @ Main ~/OceananigansOnPoseidon/Oceananigans_test.jl:10

Stacktrace:
 [1] set!(u::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, f::Function)
   @ Oceananigans.Fields ~/.julia/packages/Oceananigans/thcPW/src/Fields/set!.jl:61
 [2] set!(model::NonhydrostaticModel{Oceananigans.TimeSteppers.QuasiAdamsBashforth2TimeStepper{Float64, NamedTuple{(:u, :v, :w), Tuple{Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Face, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Center, Face, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}}}, Nothing}, Nothing, GPU, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Float64, Nothing, Nothing, Nothing, NamedTuple{(:u, :v, :w), Tuple{Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Face, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Center, Face, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}}}, NamedTuple{(), Tuple{}}, NamedTuple{(:pNHS, :pHYâ€²), Tuple{Field{Center, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Nothing}}, NamedTuple{(:u, :v, :w), Tuple{typeof(Oceananigans.Forcings.zeroforcing), typeof(Oceananigans.Forcings.zeroforcing), typeof(Oceananigans.Forcings.zeroforcing)}}, WENO{3, Float64, Nothing, Nothing, Nothing, true, Nothing, WENO{2, Float64, Nothing, Nothing, Nothing, true, Nothing, UpwindBiased{1, Float64, Nothing, Nothing, Nothing, Nothing, Centered{1, Float64, Nothing, Nothing, Nothing, Nothing}}, Centered{1, Float64, Nothing, Nothing, Nothing, Nothing}}, Centered{2, Float64, Nothing, Nothing, Nothing, Centered{1, Float64, Nothing, Nothing, Nothing, Nothing}}}, Oceananigans.Solvers.FFTBasedPoissonSolver{RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, NamedTuple{(:Î»x, :Î»y, :Î»z), Tuple{CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}}, CUDA.CuArray{ComplexF64, 3, CUDA.DeviceMemory}, Nothing, NamedTuple{(:forward, :backward), Tuple{Tuple{Oceananigans.Solvers.DiscreteTransform{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}, Oceananigans.Solvers.DiscreteTransform{CUDA.CUFFT.cCuFFTPlan{ComplexF64, -1, true, 3}, Oceananigans.Solvers.Forward, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Vector{Int64}, Vector{Periodic}, Int64, Nothing, Nothing}}, Tuple{Oceananigans.Solvers.DiscreteTransform{AbstractFFTs.ScaledPlan{ComplexF64, CUDA.CUFFT.cCuFFTPlan{ComplexF64, 1, true, 3}, Float64}, Oceananigans.Solvers.Backward, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Vector{Int64}, Vector{Periodic}, Int64, Nothing, Nothing}, Oceananigans.Solvers.DiscreteTransform{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}}}}, Nothing, NamedTuple{(:velocities, :tracers), Tuple{NamedTuple{(:u, :v, :w), Tuple{Oceananigans.Fields.ZeroField{Int64, 3}, Oceananigans.Fields.ZeroField{Int64, 3}, Oceananigans.Fields.ZeroField{Int64, 3}}}, NamedTuple{(), Tuple{}}}}, Nothing, Nothing, Nothing, NamedTuple{(), Tuple{}}}; enforce_incompressibility::Bool, kwargs::Base.Pairs{Symbol, typeof(Ïµ), Tuple{Symbol, Symbol}, NamedTuple{(:u, :v), Tuple{typeof(Ïµ), typeof(Ïµ)}}})
   @ Oceananigans.Models.NonhydrostaticModels ~/.julia/packages/Oceananigans/thcPW/src/Models/NonhydrostaticModels/set_nonhydrostatic_model.jl:41
 [3] top-level scope
   @ ~/OceananigansOnPoseidon/Oceananigans_test.jl:11
in expression starting at /vortexfs1/home/anthony.meza/OceananigansOnPoseidon/Oceananigans_test.jl:11

caused by: MethodError: no method matching Ïµ(::Float64, ::Float64)

Closest candidates are:
  Ïµ(::Any, ::Any, !Matched::Any)
   @ Main ~/OceananigansOnPoseidon/Oceananigans_test.jl:10

Stacktrace:
  [1] call_func
    @ ~/.julia/packages/Oceananigans/thcPW/src/Fields/function_field.jl:62 [inlined]
  [2] getindex
    @ ~/.julia/packages/Oceananigans/thcPW/src/Fields/function_field.jl:64 [inlined]
  [3] cpu__broadcast_kernel!
    @ ~/.julia/packages/KernelAbstractions/MAxUm/src/macros.jl:287 [inlined]
  [4] cpu__broadcast_kernel!(__ctx__::KernelAbstractions.CompilerMetadata{Oceananigans.Utils.OffsetStaticSize{(1:128, 1:128, 1:1)}, KernelAbstractions.NDIteration.NoDynamicCheck, CartesianIndex{3}, Nothing, KernelAbstractions.NDIteration.NDRange{3, KernelAbstractions.NDIteration.StaticSize{(8, 8, 1)}, KernelAbstractions.NDIteration.StaticSize{(16, 16, 1)}, Tuple{Int64, Int64, Int64}, Oceananigans.Utils.KernelOffsets{Tuple{Int64, Int64, Int64}}}}, dest::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, bc::Oceananigans.Fields.FunctionField{Face, Center, Center, Nothing, Nothing, typeof(Ïµ), RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Float64})
    @ Oceananigans.Fields ./none:0
  [5] __thread_run(tid::Int64, len::Int64, rem::Int64, obj::KernelAbstractions.Kernel{KernelAbstractions.CPU, KernelAbstractions.NDIteration.StaticSize{(16, 16)}, Oceananigans.Utils.OffsetStaticSize{(1:128, 1:128, 1:1)}, typeof(Oceananigans.Fields.cpu__broadcast_kernel!)}, ndrange::Nothing, iterspace::KernelAbstractions.NDIteration.NDRange{3, KernelAbstractions.NDIteration.StaticSize{(8, 8, 1)}, KernelAbstractions.NDIteration.StaticSize{(16, 16, 1)}, Tuple{Int64, Int64, Int64}, Oceananigans.Utils.KernelOffsets{Tuple{Int64, Int64, Int64}}}, args::Tuple{Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Oceananigans.Fields.FunctionField{Face, Center, Center, Nothing, Nothing, typeof(Ïµ), RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Float64}}, dynamic::KernelAbstractions.NDIteration.NoDynamicCheck)
    @ KernelAbstractions ~/.julia/packages/KernelAbstractions/MAxUm/src/cpu.jl:117
  [6] __run(obj::KernelAbstractions.Kernel{KernelAbstractions.CPU, KernelAbstractions.NDIteration.StaticSize{(16, 16)}, Oceananigans.Utils.OffsetStaticSize{(1:128, 1:128, 1:1)}, typeof(Oceananigans.Fields.cpu__broadcast_kernel!)}, ndrange::Nothing, iterspace::KernelAbstractions.NDIteration.NDRange{3, KernelAbstractions.NDIteration.StaticSize{(8, 8, 1)}, KernelAbstractions.NDIteration.StaticSize{(16, 16, 1)}, Tuple{Int64, Int64, Int64}, Oceananigans.Utils.KernelOffsets{Tuple{Int64, Int64, Int64}}}, args::Tuple{Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Oceananigans.Fields.FunctionField{Face, Center, Center, Nothing, Nothing, typeof(Ïµ), RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Float64}}, dynamic::KernelAbstractions.NDIteration.NoDynamicCheck, static_threads::Bool)
    @ KernelAbstractions ~/.julia/packages/KernelAbstractions/MAxUm/src/cpu.jl:84
  [7] (::KernelAbstractions.Kernel{KernelAbstractions.CPU, KernelAbstractions.NDIteration.StaticSize{(16, 16)}, Oceananigans.Utils.OffsetStaticSize{(1:128, 1:128, 1:1)}, typeof(Oceananigans.Fields.cpu__broadcast_kernel!)})(::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, ::Vararg{Any}; ndrange::Nothing, workgroupsize::Nothing)
    @ KernelAbstractions ~/.julia/packages/KernelAbstractions/MAxUm/src/cpu.jl:46
  [8] (::KernelAbstractions.Kernel{KernelAbstractions.CPU, KernelAbstractions.NDIteration.StaticSize{(16, 16)}, Oceananigans.Utils.OffsetStaticSize{(1:128, 1:128, 1:1)}, typeof(Oceananigans.Fields.cpu__broadcast_kernel!)})(::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, ::Vararg{Any})
    @ KernelAbstractions ~/.julia/packages/KernelAbstractions/MAxUm/src/cpu.jl:39
  [9] launch!(::CPU, ::RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, ::Oceananigans.Utils.KernelParameters{(128, 128, 1), (0, 0, 0)}, ::typeof(Oceananigans.Fields._broadcast_kernel!), ::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, ::Vararg{Any}; include_right_boundaries::Bool, reduced_dimensions::Tuple{}, location::Nothing, active_cells_map::Nothing, kwargs::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Oceananigans.Utils ~/.julia/packages/Oceananigans/thcPW/src/Utils/kernel_launching.jl:131
 [10] launch!(::CPU, ::RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, ::Oceananigans.Utils.KernelParameters{(128, 128, 1), (0, 0, 0)}, ::Function, ::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, ::Vararg{Any})
    @ Oceananigans.Utils ~/.julia/packages/Oceananigans/thcPW/src/Utils/kernel_launching.jl:116
 [11] copyto!
    @ ~/.julia/packages/Oceananigans/thcPW/src/Fields/broadcasting_abstract_fields.jl:74 [inlined]
 [12] materialize!
    @ ~/.julia/packages/Oceananigans/thcPW/src/Fields/broadcasting_abstract_fields.jl:64 [inlined]
 [13] materialize!
    @ ./broadcast.jl:881 [inlined]
 [14] set!(u::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, Array{Float64, 3}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, v::Oceananigans.Fields.FunctionField{Face, Center, Center, Nothing, Nothing, typeof(Ïµ), RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, CPU}, Float64})
    @ Oceananigans.Fields ~/.julia/packages/Oceananigans/thcPW/src/Fields/set!.jl:18
 [15] set!(u::Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, f::Function)
    @ Oceananigans.Fields ~/.julia/packages/Oceananigans/thcPW/src/Fields/set!.jl:45
 [16] set!(model::NonhydrostaticModel{Oceananigans.TimeSteppers.QuasiAdamsBashforth2TimeStepper{Float64, NamedTuple{(:u, :v, :w), Tuple{Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Face, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Center, Face, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}}}, Nothing}, Nothing, GPU, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Float64, Nothing, Nothing, Nothing, NamedTuple{(:u, :v, :w), Tuple{Field{Face, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Face, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Field{Center, Center, Face, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}}}, NamedTuple{(), Tuple{}}, NamedTuple{(:pNHS, :pHYâ€²), Tuple{Field{Center, Center, Center, Nothing, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Tuple{Colon, Colon, Colon}, OffsetArrays.OffsetArray{Float64, 3, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}, Float64, FieldBoundaryConditions{BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, BoundaryCondition{Oceananigans.BoundaryConditions.Periodic, Nothing}, Nothing, Nothing, BoundaryCondition{Oceananigans.BoundaryConditions.Flux, Nothing}}, Nothing, Oceananigans.Fields.FieldBoundaryBuffers{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}, Nothing}}, NamedTuple{(:u, :v, :w), Tuple{typeof(Oceananigans.Forcings.zeroforcing), typeof(Oceananigans.Forcings.zeroforcing), typeof(Oceananigans.Forcings.zeroforcing)}}, WENO{3, Float64, Nothing, Nothing, Nothing, true, Nothing, WENO{2, Float64, Nothing, Nothing, Nothing, true, Nothing, UpwindBiased{1, Float64, Nothing, Nothing, Nothing, Nothing, Centered{1, Float64, Nothing, Nothing, Nothing, Nothing}}, Centered{1, Float64, Nothing, Nothing, Nothing, Nothing}}, Centered{2, Float64, Nothing, Nothing, Nothing, Centered{1, Float64, Nothing, Nothing, Nothing, Nothing}}}, Oceananigans.Solvers.FFTBasedPoissonSolver{RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, NamedTuple{(:Î»x, :Î»y, :Î»z), Tuple{CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}, CUDA.CuArray{Float64, 3, CUDA.DeviceMemory}}}, CUDA.CuArray{ComplexF64, 3, CUDA.DeviceMemory}, Nothing, NamedTuple{(:forward, :backward), Tuple{Tuple{Oceananigans.Solvers.DiscreteTransform{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}, Oceananigans.Solvers.DiscreteTransform{CUDA.CUFFT.cCuFFTPlan{ComplexF64, -1, true, 3}, Oceananigans.Solvers.Forward, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Vector{Int64}, Vector{Periodic}, Int64, Nothing, Nothing}}, Tuple{Oceananigans.Solvers.DiscreteTransform{AbstractFFTs.ScaledPlan{ComplexF64, CUDA.CUFFT.cCuFFTPlan{ComplexF64, 1, true, 3}, Float64}, Oceananigans.Solvers.Backward, RectilinearGrid{Float64, Periodic, Periodic, Flat, Float64, Float64, Float64, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, OffsetArrays.OffsetVector{Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, GPU}, Vector{Int64}, Vector{Periodic}, Int64, Nothing, Nothing}, Oceananigans.Solvers.DiscreteTransform{Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing}}}}}, Nothing, NamedTuple{(:velocities, :tracers), Tuple{NamedTuple{(:u, :v, :w), Tuple{Oceananigans.Fields.ZeroField{Int64, 3}, Oceananigans.Fields.ZeroField{Int64, 3}, Oceananigans.Fields.ZeroField{Int64, 3}}}, NamedTuple{(), Tuple{}}}}, Nothing, Nothing, Nothing, NamedTuple{(), Tuple{}}}; enforce_incompressibility::Bool, kwargs::Base.Pairs{Symbol, typeof(Ïµ), Tuple{Symbol, Symbol}, NamedTuple{(:u, :v), Tuple{typeof(Ïµ), typeof(Ïµ)}}})
    @ Oceananigans.Models.NonhydrostaticModels ~/.julia/packages/Oceananigans/thcPW/src/Models/NonhydrostaticModels/set_nonhydrostatic_model.jl:41
 [17] top-level scope
    @ ~/OceananigansOnPoseidon/Oceananigans_test.jl:11
